let observerOptions={rootMargin:"0px",threshold:1};const initializeLazyload=e=>{const t=e.querySelector("img"),r=t.getAttribute("data-src");t.removeAttribute("data-src"),t.setAttribute("src",r);e.querySelectorAll("source").forEach((e=>{const t=e.getAttribute("data-srcset");e.setAttribute("srcset",t),e.removeAttribute("data-srcset")}))},observer=new IntersectionObserver(((e,t)=>{e.forEach((e=>{e.isIntersecting&&(initializeLazyload(e.target),t.unobserve(e.target))}))}),observerOptions),observePictures=(e=null)=>{const t=document.querySelectorAll(e);if(!e||!t.length)throw new Error(`There is no elements with selector: "${e}"`);t.forEach((e=>{const t=e.querySelector("img");t.getAttribute("data-src")&&("IntersectionObserver"in window&&"lazy"===t.getAttribute("loading")?observer.observe(e):initializeLazyload(e))}))};export default observePictures;